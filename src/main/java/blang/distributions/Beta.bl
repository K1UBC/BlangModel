package blang.distributions

model Beta {
   
  random RealVar realization
  
  param  RealVar alpha, 
                 beta
  
  laws {
    
    logf(alpha, realization) {
      check(alpha > 0)
      (alpha - 1.0) * log(realization)
    }
    
    logf(beta, realization) {
      check(beta > 0)
      // better precision than log(1.0-realization)
      (beta - 1.0) * log1p(-realization)
    }
        
    logf(alpha, beta) {
      lnGamma(alpha + beta)
    }
    
    logf(alpha) {
      - lnGamma(alpha)
    }
    
    logf(beta) {
      - lnGamma(beta)
    }
    
    indicator(realization) {
      // We follow Feller and exclude end points
      realization > 0.0 && realization < 1.0
    }
  }
  
  generate(rand) {
    Generators::beta(rand, alpha, beta)
  }
}