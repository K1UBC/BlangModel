package blang.validation.internals.fixtures


model SpikeAndSlab {
  
  random List<SpikedRealVar> variables
  
  param RealVar zeroProbability
  param RealDistribution nonZeroLogDensity
  
  laws {
    for (int index : 0 ..< variables.size) {
      logf(zeroProbability, nonZeroLogDensity, RealVar variable = variables.get(index)) {
        if (variable == 0.0) {
          log(zeroProbability)
        } else { 
          log(1.0 - zeroProbability) + nonZeroLogDensity.logDensity(variable)  
        }
      }
      indicator(SpikedRealVar variable = variables.get(index)) {
        variable.isZero.isBool
      }
      variables.get(index) ~ new ConstrainedFactor() 
    }
    
    indicator(zeroProbability) {
      0.0 <= zeroProbability && zeroProbability <= 1
    }
    
  }
  
  generate(rand) {
    for (SpikedRealVar variable : variables) {
      variable.isZero.set(Generators::bernoulli(rand, zeroProbability).asInt)
      variable.realPart.set(nonZeroLogDensity.sample(rand)) 
    }
  }
}